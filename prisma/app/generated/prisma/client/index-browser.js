
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.12.0
 * Query Engine version: 8047c96bbd92db98a2abc7c9323ce77c02c89dbc
 */
Prisma.prismaVersion = {
  client: "6.12.0",
  engine: "8047c96bbd92db98a2abc7c9323ce77c02c89dbc"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  name: 'name',
  username: 'username',
  profileImageUrl: 'profileImageUrl',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.FriendshipScalarFieldEnum = {
  friendId: 'friendId',
  userId: 'userId',
  status: 'status'
};

exports.Prisma.BookScalarFieldEnum = {
  id: 'id',
  olWorkId: 'olWorkId',
  olBookId: 'olBookId',
  cover: 'cover',
  title: 'title',
  authors: 'authors',
  description: 'description',
  publishers: 'publishers',
  publishDate: 'publishDate',
  numberOfPages: 'numberOfPages'
};

exports.Prisma.UserOnBookScalarFieldEnum = {
  bookId: 'bookId',
  userId: 'userId',
  status: 'status',
  currentPage: 'currentPage',
  totalPages: 'totalPages'
};

exports.Prisma.NoteScalarFieldEnum = {
  id: 'id',
  title: 'title',
  body: 'body',
  userId: 'userId',
  userOnBookBookId: 'userOnBookBookId',
  userOnBookUserId: 'userOnBookUserId',
  categoryId: 'categoryId'
};

exports.Prisma.BookCategoryOnBookScalarFieldEnum = {
  categoryId: 'categoryId',
  userOnBookBookId: 'userOnBookBookId',
  userOnBookUserId: 'userOnBookUserId'
};

exports.Prisma.CategoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  type: 'type',
  userId: 'userId'
};

exports.Prisma.GoalScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  type: 'type',
  progress: 'progress',
  objective: 'objective',
  endsAt: 'endsAt',
  createdAt: 'createdAt',
  status: 'status',
  userId: 'userId',
  groupId: 'groupId'
};

exports.Prisma.AchievementScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  type: 'type',
  threshold: 'threshold',
  iconPath: 'iconPath',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserAchievementScalarFieldEnum = {
  userId: 'userId',
  achievementId: 'achievementId',
  progress: 'progress',
  unlocked: 'unlocked',
  unlockedAt: 'unlockedAt'
};

exports.Prisma.UserStreakScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  current: 'current',
  max: 'max',
  completed7: 'completed7',
  lastReadAt: 'lastReadAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.GroupScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  groupImageUrl: 'groupImageUrl',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserOnGroupScalarFieldEnum = {
  groupId: 'groupId',
  userId: 'userId',
  type: 'type',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PostScalarFieldEnum = {
  id: 'id',
  title: 'title',
  body: 'body',
  groupId: 'groupId',
  userId: 'userId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.FriendshipStatus = exports.$Enums.FriendshipStatus = {
  PENDING: 'PENDING',
  FRIEND: 'FRIEND'
};

exports.BookStatus = exports.$Enums.BookStatus = {
  LENDO: 'LENDO',
  PLANEJO_LER: 'PLANEJO_LER',
  COMPLETO: 'COMPLETO',
  EM_ESPERA: 'EM_ESPERA',
  RELENDO: 'RELENDO',
  ABANDONADO: 'ABANDONADO'
};

exports.CategoryType = exports.$Enums.CategoryType = {
  NOTE: 'NOTE',
  BOOK: 'BOOK'
};

exports.TypeGoal = exports.$Enums.TypeGoal = {
  PAGES: 'PAGES',
  BOOKS: 'BOOKS'
};

exports.GoalStatus = exports.$Enums.GoalStatus = {
  ONGOING: 'ONGOING',
  COMPLETED: 'COMPLETED',
  EXPIRED: 'EXPIRED'
};

exports.AchievementType = exports.$Enums.AchievementType = {
  PAGES_READ: 'PAGES_READ',
  BOOKS_COMPLETED: 'BOOKS_COMPLETED',
  DIVERSE_CATEGORIES: 'DIVERSE_CATEGORIES',
  GOALS_COMPLETED: 'GOALS_COMPLETED',
  MAX_STREAK_WEEKS: 'MAX_STREAK_WEEKS'
};

exports.TypeMember = exports.$Enums.TypeMember = {
  CREATOR: 'CREATOR',
  ADMIN: 'ADMIN',
  MEMBER: 'MEMBER'
};

exports.Prisma.ModelName = {
  User: 'User',
  Friendship: 'Friendship',
  Book: 'Book',
  UserOnBook: 'UserOnBook',
  Note: 'Note',
  BookCategoryOnBook: 'BookCategoryOnBook',
  Category: 'Category',
  Goal: 'Goal',
  Achievement: 'Achievement',
  UserAchievement: 'UserAchievement',
  UserStreak: 'UserStreak',
  Group: 'Group',
  UserOnGroup: 'UserOnGroup',
  Post: 'Post'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
